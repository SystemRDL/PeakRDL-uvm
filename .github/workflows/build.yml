name: build

on:
  push:
    branches:
      - main
      - 'dev/**'
  pull_request:
    branches: [ main ]
  release:
    types:
      - published

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        python-version:
          - 3.5
          - 3.6
          - 3.7
          - 3.8
          - 3.9
          - "3.10"
          - "3.11"
          - "3.12"
        include:
          - os: ubuntu-latest

          # older versions need older OS
          - python-version: 3.5
            os: ubuntu-20.04
          - python-version: 3.6
            os: ubuntu-20.04

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.7 to bootstrap py3.6 and py3.5
        if: ${{ matrix.python-version == '3.6' || matrix.python-version == '3.5' }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Python 3.6 & 3.7 cannot install directly from a pyproject.toml
      # Instead, build a wheel from py3.7 and then install it
      - name: Install via wheel
        if: ${{ matrix.python-version == '3.6' || matrix.python-version == '3.5' }}
        run: |
          python3.7 -m pip install build
          python3.7 -m build
          python --version
          python -m pip install ./dist/*.whl

      - name: Install
        if: ${{ matrix.python-version != '3.6' && matrix.python-version != '3.5' }}
        run: |
          python -m pip install .

      - name: Test
        run: |
          cd test
          python generate_testcase_data.py basic testcases/basic.rdl

#-------------------------------------------------------------------------------
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install -U pylint

      - name: Install
        run: |
          python -m pip install .

      - name: Run Lint
        run: |
          pylint --rcfile test/pylint.rc peakrdl_uvm

#-------------------------------------------------------------------------------
  build:
    needs:
      - test
      - lint
    name: Build distributions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install -U build

      - name: Build
        run: python -m build

      - uses: actions/upload-artifact@v3
        with:
          path: |
            dist/*.tar.gz
            dist/*.whl

#-------------------------------------------------------------------------------
  deploy:
    needs:
      - build

    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write

    # Only publish when a GitHub Release is created.
    if: github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v4.1.7
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
